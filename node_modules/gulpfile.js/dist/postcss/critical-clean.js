"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const merge_1 = __importDefault(require("lodash/merge"));
const postcss_1 = __importDefault(require("postcss"));
/**
 * Extract critical rules.
 */
exports.default = postcss_1.default.plugin("critical-clean", (opts) => {
    const options = merge_1.default({ keepRules: false }, opts || {});
    return (css) => {
        css.walk((node) => {
            // Treat `@critical` nodes.
            if (node.type === "atrule" && node.name === "critical") {
                // Keep children by adding them after.
                if (options.keepRules) {
                    node.each((child) => {
                        node.after(child.clone());
                    });
                }
                // Remove current node.
                node.remove();
            }
            // Treat `critical: this` nodes.
            if (node.type === "decl" && node.prop === "critical" && node.value === "this") {
                if (options.keepRules) {
                    // Remove current nodes.
                    node.remove();
                }
                else {
                    // Remove node that include current.
                    node.parent.remove();
                }
            }
        });
    };
});
//# sourceMappingURL=critical-clean.js.map